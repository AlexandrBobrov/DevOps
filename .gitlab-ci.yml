build_images:
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t nginx-customized .
    - docker build -t postgres-customized .
    - docker tag nginx-customized $CI_REGISTRY_IMAGE/nginx-customized
    - docker tag postgres-customized $CI_REGISTRY_IMAGE/postgres-customized
    - docker push $CI_REGISTRY_IMAGE/nginx-customized
    - docker push $CI_REGISTRY_IMAGE/postgres-customized
  tags:
    - docker

deploy:
  image: docker:latest
  services:
    - docker:dind
  script:
    - sed 's/build:/image:/' docker-compose.yml > docker-compose-deploy.yaml
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker-compose -f docker-compose-deploy.yaml up -d
  tags:
    - docker


deploy compose:
  stage: deploy
  image: docker:latest
  variables:
    SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY
    SSH_PORT: $SSH_PORT
    NGINX_PORT: $NGINX_PORT
    POSTGRES_PORT: $POSTGRES_PORT
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - scp -P $SSH_PORT docker-compose.yaml student56@master.hadoop.akhcheck.ru:/home/student56/docker-compose.yaml
    - ssh -p $SSH_PORT student56@master.hadoop.akhcheck.ru "cd /home/student56 && docker-compose -f docker-compose.yaml up -d"
  dependencies:
    - build_image
  only:
    - master
